DROP TABLE EMPLOYEE;
DROP TABLE DEPARTMENT;
DROP SEQUENCE SQ_EMPLOYEE_PK;
DROP SEQUENCE SQ_DEPARTMENT_PK;


CREATE TABLE EMPLOYEE (
    EMPLOYEE_ID INTEGER PRIMARY KEY,
    EMP_FIRSTNAME VARCHAR2(100),
    EMP_LASTNAME VARCHAR2(100),
    DEPARTMENT_ID INTEGER, --will be a fk
    SALARY FLOAT,
    EMP_EMAIL VARCHAR2(100)
);
/

CREATE TABLE DEPARTMENT (
    DEPARTMENT_ID INTEGER PRIMARY KEY,
    DEPARTMENT_NAME VARCHAR2(100)
);
/

-- alter table to add fk constraint
--ALTER TABLE EMPLOYEE 
--ADD FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT(DEPARTMENT_ID);
--/

--sequences
CREATE SEQUENCE SQ_EMPLOYEE_PK
START WITH 1
INCREMENT BY 1;
/

CREATE SEQUENCE SQ_DEPARTMENT_PK
START WITH 1
INCREMENT BY 1;
/
-- triggers
CREATE OR REPLACE TRIGGER TR_INSERT_EMPLOYEE
BEFORE INSERT ON EMPLOYEE 
FOR EACH ROW
BEGIN
    SELECT SQ_EMPLOYEE_PK.NEXTVAL INTO :NEW.EMPLOYEE_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TR_INSERT_DEPARTMENT
BEFORE INSERT ON DEPARTMENT
FOR EACH ROW
BEGIN
    SELECT SQ_DEPARTMENT_PK.NEXTVAL INTO :NEW.DEPARTMENT_ID FROM DUAL;
END;
/

-- insert
INSERT INTO EMPLOYEE (EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID,SALARY, EMP_EMAIL)
VALUES ('BILLY' , 'BOB', 1, 200.22, 'EMAIL@EMAIL.COM');
/
INSERT INTO EMPLOYEE (EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID,SALARY, EMP_EMAIL)
VALUES ('ILLY' , 'BO', 10, 200, 'EMAIL@EMAIL.COM');
/
INSERT INTO EMPLOYEE (EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID,SALARY, EMP_EMAIL)
VALUES ('BILL' , 'B', 10, 100.00, 'EMAIL@EMAIL.COM');
/
INSERT INTO EMPLOYEE (EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID,SALARY, EMP_EMAIL)
VALUES ('B' , 'BOB', 24, 100000, 'EMAIL@EMAIL.COM');
/
INSERT INTO EMPLOYEE (EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID,SALARY, EMP_EMAIL)
VALUES ('TOM' , 'LOM', 24, 200.22, 'EMAIL@EMAIL.COM');
/
INSERT INTO EMPLOYEE (EMP_FIRSTNAME, EMP_LASTNAME, DEPARTMENT_ID,SALARY, EMP_EMAIL)
VALUES ('BOBBY' , 'POLL', 100, 89999, 'EMAIL@EMAIL.COM');
/

INSERT INTO DEPARTMENT (DEPARTMENT_NAME) VALUES ('TEST');
/
INSERT INTO DEPARTMENT (DEPARTMENT_NAME) VALUES ('POLICE');
/
INSERT INTO DEPARTMENT (DEPARTMENT_NAME) VALUES ('FIRE');
/

--STORED PROCEDURE
CREATE OR REPLACE PROCEDURE SP_GIVE_RAISE(DEPART_ID IN INTEGER, NEWAVG_SALARY OUT FLOAT)
IS
AVERAGE_SALARY FLOAT;
BEGIN
        UPDATE EMPLOYEE SET SALARY = SALARY + (SALARY * .1) WHERE DEPARTMENT_ID = DEPART_ID;
        SELECT AVG(SALARY) INTO AVERAGE_SALARY FROM EMPLOYEE WHERE DEPARTMENT_ID = DEPART_ID; 
END;
/   

select * from department;